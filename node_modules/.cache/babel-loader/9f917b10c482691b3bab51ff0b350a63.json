{"ast":null,"code":"var _jsxFileName = \"/Users/loganbertrand/Documents/code/bootcamp/react-memory-game/src/App.js\";\nimport React from \"react\";\nimport Navbar from './components/Navbar';\nimport Jumbotron from './components/Jumbotron';\nimport Container from './components/Container';\nimport Card from './components/Card';\nimport characters from \"./characters.json\";\nimport './styles/App.css';\nimport Button from \"./components/Button\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters,\n      score: 0,\n      highscore: 0,\n      selected: []\n    };\n\n    this.cardClicked = event => {\n      const currentCard = event.target.id;\n      console.log(currentCard); //const alreadyClicked = this.state.clicked.indexOf(currentCard) > -1;\n\n      if (this.state.selected.indexOf(currentCard) > -1) {\n        this.handleShuffleArr(this.state.characters);\n        console.log('already been clicked');\n      } else {\n        this.handleShuffleArr(this.state.characters);\n      }\n    };\n\n    this.handleShuffleArr = arr => {\n      let i = arr.length - 1;\n\n      for (; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n      }\n\n      return this.setState({\n        characters: arr\n      });\n    };\n\n    this.resetGame = () => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.characters.map(character => React.createElement(Card, {\n      cardClicked: this.cardClicked,\n      id: character.id,\n      key: character.id,\n      name: character.name,\n      image: character.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: () => this.handleShuffleArr(this.state.cards),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"shuffle\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/loganbertrand/Documents/code/bootcamp/react-memory-game/src/App.js"],"names":["React","Navbar","Jumbotron","Container","Card","characters","Button","App","Component","state","score","highscore","selected","cardClicked","event","currentCard","target","id","console","log","indexOf","handleShuffleArr","arr","i","length","j","Math","floor","random","temp","setState","resetGame","render","map","character","name","image","cards"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNJ,MAAAA,UADM;AAERK,MAAAA,KAAK,EAAE,CAFC;AAGRC,MAAAA,SAAS,EAAE,CAHH;AAINC,MAAAA,QAAQ,EAAE;AAJJ,KAFwB;;AAAA,SAShCC,WATgC,GASlBC,KAAK,IAAI;AACrB,YAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAAjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAFqB,CAIrB;;AACA,UAAI,KAAKN,KAAL,CAAWG,QAAX,CAAoBQ,OAApB,CAA4BL,WAA5B,IAA2C,CAAC,CAAhD,EAAkD;AAChD,aAAKM,gBAAL,CAAsB,KAAKZ,KAAL,CAAWJ,UAAjC;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,OAHD,MAGK;AACH,aAAKE,gBAAL,CAAsB,KAAKZ,KAAL,CAAWJ,UAAjC;AACD;AAGF,KAtB+B;;AAAA,SAwBhCgB,gBAxBgC,GAwBZC,GAAD,IAAS;AAC5B,UAAIC,CAAC,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAArB;;AACA,aAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AAClB,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,cAAMM,IAAI,GAAGP,GAAG,CAACC,CAAD,CAAhB;AACAD,QAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACG,CAAD,CAAZ;AACAH,QAAAA,GAAG,CAACG,CAAD,CAAH,GAASI,IAAT;AACA;;AACC,aAAO,KAAKC,QAAL,CAAc;AACnBzB,QAAAA,UAAU,EAAEiB;AADO,OAAd,CAAP;AAGD,KAnC+B;;AAAA,SAqChCS,SArCgC,GAqCpB,MAAM,CAGjB,CAxC+B;AAAA;;AA0ChCC,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKvB,KAAL,CAAWJ,UAAX,CAAsB4B,GAAtB,CAA0BC,SAAS,IAC/B,oBAAC,IAAD;AACC,MAAA,WAAW,EAAE,KAAKrB,WADnB;AAEC,MAAA,EAAE,EAAEqB,SAAS,CAACjB,EAFf;AAGC,MAAA,GAAG,EAAEiB,SAAS,CAACjB,EAHhB;AAIC,MAAA,IAAI,EAAEiB,SAAS,CAACC,IAJjB;AAKC,MAAA,KAAK,EAAED,SAAS,CAACE,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFD,EAWC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKf,gBAAL,CAAsB,KAAKZ,KAAL,CAAW4B,KAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXD,CALF,CADF;AAsBD;;AAjE+B;;AAqElC,eAAe9B,GAAf","sourcesContent":["import React from \"react\";\nimport Navbar from './components/Navbar'\nimport Jumbotron from './components/Jumbotron'\nimport Container from './components/Container'\nimport Card from './components/Card'\nimport characters from \"./characters.json\";\nimport './styles/App.css';\nimport Button from \"./components/Button\";\n\nclass App extends React.Component {\n  // Setting this.state.characters to the characters json array\n  state = {\n    characters,\n\t\tscore: 0,\n\t\thighscore: 0,\n    selected: [],\n  };\n\n  cardClicked = event => {\n    const currentCard = event.target.id\n    console.log(currentCard)\n\n    //const alreadyClicked = this.state.clicked.indexOf(currentCard) > -1;\n    if (this.state.selected.indexOf(currentCard) > -1){\n      this.handleShuffleArr(this.state.characters);\n      console.log('already been clicked')\n    }else{\n      this.handleShuffleArr(this.state.characters);\n    }\n    \n\n  }\n  \n  handleShuffleArr = (arr) => {\n\t\tlet i = arr.length - 1;\n\t\tfor (; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\tconst temp = arr[i];\n\t\t\tarr[i] = arr[j];\n\t\t\tarr[j] = temp;\n\t\t}\n    return this.setState({\n      characters: arr\n    });\n  }\n\n  resetGame = () => {\n\n\n  }\n  \n  render () {\n    return (\n      <div>\n        <Navbar/>\n        <Jumbotron>\n        </Jumbotron>\n        \n        <Container>\n        \n        {this.state.characters.map(character =>(\n             <Card\n              cardClicked={this.cardClicked}\n              id={character.id}\n              key={character.id}\n              name={character.name}\n              image={character.image}\n              />\n        ))}\n         <Button onClick={() => this.handleShuffleArr(this.state.cards)}>shuffle</Button>\n        </Container>\n        \n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}